Description: CVE-2014-8650: Handle mutual authentication
 Make certain that responses always pass through handle_other() to provide
 mutual authentication before returning them to the user.
Origin: upstream, https://github.com/mkomitee/requests-kerberos/commit/9c1e08cc17bb6950455a85d33d391ecd2bce6eb6.patch
Author: Michael Komitee <komitee@deshaw.com>
Date: Fri, 8 Aug 2014 17:47:42 -0400
Bug-Debian: https://bugs.debian.org/768408
Index: python-requests-kerberos/requests_kerberos/kerberos_.py
===================================================================
--- python-requests-kerberos.orig/requests_kerberos/kerberos_.py	2014-06-12 09:10:24.000000000 +0800
+++ python-requests-kerberos/requests_kerberos/kerberos_.py	2014-11-10 21:24:56.000000000 +0800
@@ -251,7 +251,7 @@
         if response.status_code == 401:
             _r = self.handle_401(response, **kwargs)
             log.debug("handle_response(): returning {0}".format(_r))
-            return _r
+            return self.handle_response(_r, **kwargs)
         else:
             _r = self.handle_other(response)
             log.debug("handle_response(): returning {0}".format(_r))
Index: python-requests-kerberos/test_requests_kerberos.py
===================================================================
--- python-requests-kerberos.orig/test_requests_kerberos.py	2014-11-10 21:24:56.000000000 +0800
+++ python-requests-kerberos/test_requests_kerberos.py	2014-11-10 21:24:56.000000000 +0800
@@ -403,10 +403,14 @@
             response.connection = connection
             response._content = ""
             response.raw = raw
+
             auth = requests_kerberos.HTTPKerberosAuth()
+            auth.handle_other = Mock(return_value=response_ok)
+
             r = auth.handle_response(response)
 
             self.assertTrue(response in r.history)
+            auth.handle_other.assert_called_with(response_ok)
             self.assertEqual(r, response_ok)
             self.assertEqual(request.headers['Authorization'], 'Negotiate GSSRESPONSE')
             connection.send.assert_called_with(request)
